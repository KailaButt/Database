Question,Answer,Difficulty,incorrect_answer_1,incorrect_answer_2,incorrect_answer_3
What symbol is used to denote a single-line comment in C++? ,//,1,->',new,&&
How do you declare an integer variable in C++?,int,1,;,&&,+
What is the keyword used to end a C++ statement?,;,1,->',+,int
What C++ construct is used for making decisions based on a condition?,If Statement,1,int& refVar = x;,Templates allow generic programming by defining functions or classes that can work with any data type.,Object-Oriented Programming
How do you perform addition in C++?,+,1,6,&&,;
"Which logical operator is used to represent ""logical AND"" in C++?",&&,1,6,;,10
What is the process of bundling data and methods that operate on the data in a single unit called?,Encapsulation,1,To allow access to members only within the same class.,"Constructors are used to initialize objects, while destructors are used to clean up resources.",Pass by array
What is the purpose of a constructor in C++?,Initializing an Object,1,"cout is used for output (printing), while cin is used for input (reading).",For input and output operations.,If Statement
Inheritance involves the concept of acquiring properties and behaviors from a '____' class.,Base,1,enum,string,final
How do you dynamically allocate memory in C++?,new,2,6,;,10
What is the correct syntax for a C++ function declaration?,returnType functionName,2,It allows a derived class to redefine a base class function.,Encapsulation,Providing a new implementation for a base class function in a derived class
How do you include the contents of a header file in C++?,#include,2,iostream,final,class
What loop structure is used when the number of iterations is known beforehand? ,for loop,2,enum,iostream,Base
"In C++, what is the purpose of the ""break"" statement?",Exit loop or switch statement,2,To refer to the current instance of a class.,A method used for destroying objects and freeing up resources.,Ambiguity when a class inherits from two classes that have a common ancestor
"What is the result of the expression ""5 == 5"" in C++?",true,2,private,string,final
What is the access specifier that allows a class to hide its members from outside access?,private,2,class,final,true
Polymorphism in C++ can be achieved through ____.,Function overloading,2,"Members of a struct are public by default, while members of a class are private by default.",It means the member is shared among all instances of the class.,Using classes such as ifstream and getline().
What is the purpose of a destructor in C++? ,Clean up resources when an object is destroyed,2,Lambda expressions are anonymous functions that can capture variables from their surrounding scope.,"The process of simplifying complex systems/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than",Using the new keyword.
What is a lambda function in C++?,Anonymous Function,3,"The process of simplifying complex systems/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than",It allows for late binding of function calls.,"array_name[size] = {value1, value2, ...};"
How do you declare a reference variable in C++?,Type &variableName,3,"(int x, int y) -> int { return x + y; }",Exit loop or switch statement,To allow access to private and protected members of another class.
"What is the purpose of the ""typename"" keyword in C++ templates?",Specify that a dependent name is a type ,3,data_type variable_name;,"Members of a struct are public by default, while members of a class are private by default.",Variable that stores the memory address of another variable
Explain the concept of a pointer in C++.,Variable that stores the memory address of another variable,3,The process of bundling data and methods within a class and hiding the internal state of an object,"Runtime polymorphism is achieved through virtual functions and dynamic binding, while compile-time polymorphism is achieved through templates and function overloading.",It specifies that a member function is declared in the base class and overridden in derived classes.
"What is the difference between ""++i"" and ""i++"" in C++?",Pre-increment and post-increment operators,3,"cout is used for output (printing), while cin is used for input (reading).",It allows for late binding of function calls.,It indicates that a function's body should be expanded inline by the compiler.
"What is the purpose of the ""volatile"" keyword in C++?",Indicate that a variable may be changed by external factors ,3,It allows a derived class to redefine a base class function.,To allow access to private and protected members of another class.,It allows for late binding of function calls.
What is the diamond problem in the context of multiple inheritance in C++?,Ambiguity when a class inherits from two classes that have a common ancestor,3,"array_name[size] = {value1, value2, ...};",It allows a function to have multiple definitions with different parameters.,Function overloading
What is a pure virtual function in C++?,"A virtual function without a definition in the base class, making it abstract",3,It specifies that a member function is declared in the base class and overridden in derived classes.,To allow access to private and protected members of another class.,int& refVar = x;
Explain the concept of function overriding in C++.,Providing a new implementation for a base class function in a derived class,3,"The process of simplifying complex systems/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than","Members of a struct are public by default, while members of a class are private by default.","cout is used for output (printing), while cin is used for input (reading)."
What is the syntax for declaring a variable in C++?,data_type variable_name;,1,It specifies that a member function is declared in the base class and overridden in derived classes.,It represents a null pointer.,"A virtual function without a definition in the base class, making it abstract"
Explain the difference between pass by value and pass by reference in C++?,"Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter",1,It specifies that a member function is declared in the base class and overridden in derived classes.,Ambiguity when a class inherits from two classes that have a common ancestor,An abstract class cannot be instantiated and may contain pure virtual functions.
How do you initialize an array in C++?,"array_name[size] = {value1, value2, ...};",1,To restrict access to members to only the derived classes.,Ambiguity when a class inherits from two classes that have a common ancestor,Exit loop or switch statement
What is the purpose of the iostream library in C++?,For input and output operations.,1,If Statement,int& refVar = x;,The ability of objects to take on multiple forms in a code. Objects of different classes to be treated as objects of a common superclass
What is the difference between cout and cin in C++?,"cout is used for output (printing), while cin is used for input (reading).",1,To refer to the current instance of a class.,Using the new keyword.,"A customer information class encapsulating details such as name, address, and contact information."
Explain the concept of pointers in C++ and provide an example.,Pointers are variables that store memory addresses. Example: int *ptr;,2,Variable that stores the memory address of another variable,Exit loop or switch statement,Lambda expressions are anonymous functions that can capture variables from their surrounding scope.
What is the difference between struct and class in C++?,"Members of a struct are public by default, while members of a class are private by default.",2,It specifies that a member function is declared in the base class and overridden in derived classes.,Multiple inheritance allows a class to inherit from multiple base classes. Issues include ambiguity and the diamond problem.,An abstract class cannot be instantiated and may contain pure virtual functions.
Describe the purpose of constructors and destructors in C++.,"Constructors are used to initialize objects, while destructors are used to clean up resources.",2,Variable that stores the memory address of another variable,"Function overloading involves redefining a base class function in a derived class, while function overriding involves having multiple functions with the same name but different parameters.",Providing a new implementation for a base class function in a derived class
How do you dynamically allocate memory in C++?,Using the new keyword.,2,Exit loop or switch statement,The ability to redefine the meaning of operators for user-defined types.,A teen account class inheriting properties from a parent account.
Explain the concept of inheritance in C++ with an example.,Inheritance allows a class to inherit properties and behaviors from another class. Example: class DerivedClass : public BaseClass {},2,Exit loop or switch statement,"Members of a struct are public by default, while members of a class are private by default.",Ambiguity when a class inherits from two classes that have a common ancestor
What are lambda expressions in C++? Provide an example of their usage.,Lambda expressions are anonymous functions that can capture variables from their surrounding scope.,3,A blueprint for creating objects that defines attributes and methods.,Providing a new implementation for a base class function in a derived class,An instance of a class that encapsulates data and methods.
Describe the difference between runtime polymorphism and compile-time polymorphism in C++.,"Runtime polymorphism is achieved through virtual functions and dynamic binding, while compile-time polymorphism is achieved through templates and function overloading.",3,The ability to redefine the meaning of operators for user-defined types.,It represents a null pointer.,To allow access to private and protected members of another class.
Explain the concept of function overloading and function overriding in C++.,"Function overloading involves redefining a base class function in a derived class, while function overriding involves having multiple functions with the same name but different parameters.",3,If Statement,The ability to redefine the meaning of operators for user-defined types.,"Members of a struct are public by default, while members of a class are private by default."
What is a template in C++? How do you define and use templates?,Templates allow generic programming by defining functions or classes that can work with any data type.,3,A blueprint for creating objects that defines attributes and methods.,"cout is used for output (printing), while cin is used for input (reading).","Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter"
Describe the process of multiple inheritance in C++ and its potential issues.,Multiple inheritance allows a class to inherit from multiple base classes. Issues include ambiguity and the diamond problem.,3,Pre-increment and post-increment operators,"array_name[size] = {value1, value2, ...};",Object-Oriented Programming
What is polymorphism in OOP?,The ability of objects to take on multiple forms in a code. Objects of different classes to be treated as objects of a common superclass,1,Object-Oriented Programming,It specifies that a member function is declared in the base class and overridden in derived classes.,STL containers automatically handle memory allocation and deallocation.
What is abstraction in OOP?,"The process of simplifying complex systems/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than",1,Variable that stores the memory address of another variable,STL containers automatically handle memory allocation and deallocation.,Type &variableName
What is encapsulation in OOP?,The process of bundling data and methods within a class and hiding the internal state of an object,1,Templates allow generic programming by defining functions or classes that can work with any data type.,The ability for a class to inherit attributes and behavior from another class.,To redefine the meaning of operators for user-defined types.
What is inheritance in OOP?,The ability for a class to inherit attributes and behavior from another class.,1,Anonymous Function,It specifies that a member function is declared in the base class and overridden in derived classes.,Lambda expressions are anonymous functions that can capture variables from their surrounding scope.
What is a class in C++?,A blueprint for creating objects that defines attributes and methods.,1,"Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter",Object-Oriented Programming,To allow access to private and protected members of another class.
What is a constructor in C++?,A special member function with the same name as the class used to initialize objects.,1,The ability to redefine the meaning of operators for user-defined types.,An abstract class cannot be instantiated and may contain pure virtual functions.,Inheritance allows a class to inherit properties and behaviors from another class. Example: class DerivedClass : public BaseClass {}
What is a destructor in C++?,A method used for destroying objects and freeing up resources.,1,It indicates that a variable's value may change unexpectedly.,The ability to redefine the meaning of operators for user-defined types.,To restrict access to members to only the derived classes.
What is an object in C++?,An instance of a class that encapsulates data and methods.,1,It means the member is shared among all instances of the class.,STL containers automatically handle memory allocation and deallocation.,Pre-increment and post-increment operators
What is operator overloading in C++?,The ability to redefine the meaning of operators for user-defined types.,1,For input and output operations.,Object-Oriented Programming,Pre-increment and post-increment operators
What is the correct creation of a class in C++?,A blueprint for creating objects that defines attributes and methods.,2,Pre-increment and post-increment operators,The ability to redefine the meaning of operators for user-defined types.,It indicates that a variable's value may change unexpectedly.
How do you read data from a file in C++?,Using classes such as ifstream and getline().,2,It indicates that a variable's value may change unexpectedly.,returnType functionName,It specifies that a member function is declared in the base class and overridden in derived classes.
What statement illustrates encapsulation in C++?,To allow access to members only within the same class.,2,To refer to the current instance of a class.,STL containers automatically handle memory allocation and deallocation.,Type &variableName
"In a banking system, which real-world example demonstrates inheritance in C++?",A teen account class inheriting properties from a parent account.,2,"cout is used for output (printing), while cin is used for input (reading).",It is used for destroying objects and freeing up resources.,To restrict access to members to only the derived classes.
"In a banking system, which real-world example demonstrates abstraction in C++?","A customer information class encapsulating details such as name, address, and contact information.",2,It specifies that a member function is declared in the base class and overridden in derived classes.,Indicate that a variable may be changed by external factors ,Exit loop or switch statement
"In a banking system, which real-world example demonstrates the use of a constructor in C++?",A savings account class initializing the account balance to zero when created.,2,int& refVar = x;,Type &variableName,STL containers automatically handle memory allocation and deallocation.
"In C++, what distinguishes a destructor from other member functions?",It is used for destroying objects and freeing up resources.,2,Type &variableName,Specify that a dependent name is a type ,Object-Oriented Programming
What is the primary purpose of an object in C++?,An instance of a class that encapsulates data and methods.,2,"A customer information class encapsulating details such as name, address, and contact information.","Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter",A teen account class inheriting properties from a parent account.
When should operator overloading be used in C++?,To redefine the meaning of operators for user-defined types.,2,To refer to the current instance of a class.,It indicates that a member variable can be modified even in a const member function.,A savings account class initializing the account balance to zero when created.
What is the primary advantage of using dynamic polymorphism compared to static polymorphism in C++?,It allows for late binding of function calls.,3,Inheritance allows a class to inherit properties and behaviors from another class. Example: class DerivedClass : public BaseClass {},returnType functionName,Pre-increment and post-increment operators
What is the main advantage of using STL containers over traditional arrays in C++?,STL containers automatically handle memory allocation and deallocation.,3,Indicate that a variable may be changed by external factors ,Specify that a dependent name is a type ,"A customer information class encapsulating details such as name, address, and contact information."
What is the purpose of the 'friend' keyword in C++ classes?,To allow access to private and protected members of another class.,3,"A customer information class encapsulating details such as name, address, and contact information.",It allows a derived class to redefine a base class function.,It means the member is shared among all instances of the class.
Which of the following accurately describes the diamond problem in C++?,It occurs when a derived class has multiple base classes with a common ancestor.,3,It specifies that a member function is declared in the base class and overridden in derived classes.,"A customer information class encapsulating details such as name, address, and contact information.",For input and output operations.
"In C++, what is the primary use of the 'protected' access specifier in a class?",To restrict access to members to only the derived classes.,3,It allows a function to have multiple definitions with different parameters.,It indicates that the function cannot modify the object's data members.,data_type variable_name;
What distinguishes an abstract class from a concrete class in C++?,An abstract class cannot be instantiated and may contain pure virtual functions.,3,It occurs when a derived class has multiple base classes with a common ancestor.,Pointers are variables that store memory addresses. Example: int *ptr;,A teen account class inheriting properties from a parent account.
Which C++ feature allows a derived class to provide a specific implementation for a method in the base class?,It allows a derived class to redefine a base class function.,3,It allows for late binding of function calls.,Variable that stores the memory address of another variable,Providing a new implementation for a base class function in a derived class
What is the primary purpose of the 'this' pointer in C++?,To refer to the current instance of a class.,3,Pre-increment and post-increment operators,A savings account class initializing the account balance to zero when created.,Templates allow generic programming by defining functions or classes that can work with any data type.
Which of the following accurately describes the concept of function overloading in C++?,It allows a function to have multiple definitions with different parameters.,3,It specifies that a member function is declared in the base class and overridden in derived classes.,A blueprint for creating objects that defines attributes and methods.,Encapsulation
Which of the following is not a fundamental data type in C++?,string,0,for loop,enum,final
What does OOP stand for in the context of C++?,Object-Oriented Programming,0,A blueprint for creating objects that defines attributes and methods.,data_type variable_name;,"Constructors are used to initialize objects, while destructors are used to clean up resources."
Which keyword is used for dynamic memory allocation in C++?,new,0,+,6,;
Which of the following operators is used for pointer access in C++?,->',0,+,10,new
What is the output of the following code? int x = 5; int y = x++; cout << y;,6,0,10,+,;
Which keyword is used to define a class in C++?,class,0,final,iostream,true
What is the output of the following code? int x = 10; int *ptr = &x; cout << *ptr;,10,0,int,;,&&
Which of the following is a correct way to declare a reference variable in C++?,int& refVar = x;,0,Using classes such as ifstream and getline().,A savings account class initializing the account balance to zero when created.,It indicates that the function cannot modify the object's data members.
What does the keyword static signify when used with a class member?,It means the member is shared among all instances of the class.,0,Anonymous Function,Object-Oriented Programming,Using the new keyword.
 Which of the following is not a valid way to pass arguments to a function in C++?,Pass by array,0,Ambiguity when a class inherits from two classes that have a common ancestor,To allow access to members only within the same class.,Object-Oriented Programming
Which keyword is used to define an enumeration in C++?,enum,0,Base,private,iostream
What is the purpose of the const qualifier when used with a member function in C++?,It indicates that the function cannot modify the object's data members.,0,It represents a null pointer.,"(int x, int y) -> int { return x + y; }",A special member function with the same name as the class used to initialize objects.
What is the correct syntax for a lambda function in C++?,"(int x, int y) -> int { return x + y; }",0,The ability to redefine the meaning of operators for user-defined types.,Multiple inheritance allows a class to inherit from multiple base classes. Issues include ambiguity and the diamond problem.,Clean up resources when an object is destroyed
What does the nullptr keyword represent in C++?,It represents a null pointer.,0,Pointers are variables that store memory addresses. Example: int *ptr;,To redefine the meaning of operators for user-defined types.,If Statement
What is the purpose of the virtual keyword in C++?,It specifies that a member function is declared in the base class and overridden in derived classes.,0,Using the new keyword.,"Members of a struct are public by default, while members of a class are private by default.",Clean up resources when an object is destroyed
Which of the following is not a valid storage class specifier in C++?,final,0,enum,class,Base
What is the purpose of the volatile keyword in C++?,It indicates that a variable's value may change unexpectedly.,0,Function overloading,"The process of simplifying complex systems/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than",Templates allow generic programming by defining functions or classes that can work with any data type.
What is the purpose of the mutable keyword in C++?,It indicates that a member variable can be modified even in a const member function.,0,Anonymous Function,"The process of simplifying complex systems/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than",Templates allow generic programming by defining functions or classes that can work with any data type.
Which standard library header file should be included to perform input and output operations in C++?,iostream,0,class,string,#include
What is the purpose of the inline keyword in C++?,It indicates that a function's body should be expanded inline by the compiler.,0,Ambiguity when a class inherits from two classes that have a common ancestor,The process of bundling data and methods within a class and hiding the internal state of an object,It allows a function to have multiple definitions with different parameters.
