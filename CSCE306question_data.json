[{"Question":"What symbol is used to denote a single-line comment in C++? ","Answer":"\/\/","Difficulty":1,"incorrect_answer_1":"->'","incorrect_answer_2":"new","incorrect_answer_3":"&&"},{"Question":"How do you declare an integer variable in C++?","Answer":"int","Difficulty":1,"incorrect_answer_1":";","incorrect_answer_2":"&&","incorrect_answer_3":"+"},{"Question":"What is the keyword used to end a C++ statement?","Answer":";","Difficulty":1,"incorrect_answer_1":"->'","incorrect_answer_2":"+","incorrect_answer_3":"int"},{"Question":"What C++ construct is used for making decisions based on a condition?","Answer":"If Statement","Difficulty":1,"incorrect_answer_1":"int& refVar = x;","incorrect_answer_2":"Templates allow generic programming by defining functions or classes that can work with any data type.","incorrect_answer_3":"Object-Oriented Programming"},{"Question":"How do you perform addition in C++?","Answer":"+","Difficulty":1,"incorrect_answer_1":"6","incorrect_answer_2":"&&","incorrect_answer_3":";"},{"Question":"Which logical operator is used to represent \"logical AND\" in C++?","Answer":"&&","Difficulty":1,"incorrect_answer_1":"6","incorrect_answer_2":";","incorrect_answer_3":"10"},{"Question":"What is the process of bundling data and methods that operate on the data in a single unit called?","Answer":"Encapsulation","Difficulty":1,"incorrect_answer_1":"To allow access to members only within the same class.","incorrect_answer_2":"Constructors are used to initialize objects, while destructors are used to clean up resources.","incorrect_answer_3":"Pass by array"},{"Question":"What is the purpose of a constructor in C++?","Answer":"Initializing an Object","Difficulty":1,"incorrect_answer_1":"cout is used for output (printing), while cin is used for input (reading).","incorrect_answer_2":"For input and output operations.","incorrect_answer_3":"If Statement"},{"Question":"Inheritance involves the concept of acquiring properties and behaviors from a '____' class.","Answer":"Base","Difficulty":1,"incorrect_answer_1":"enum","incorrect_answer_2":"string","incorrect_answer_3":"final"},{"Question":"How do you dynamically allocate memory in C++?","Answer":"new","Difficulty":2,"incorrect_answer_1":"6","incorrect_answer_2":";","incorrect_answer_3":"10"},{"Question":"What is the correct syntax for a C++ function declaration?","Answer":"returnType functionName","Difficulty":2,"incorrect_answer_1":"It allows a derived class to redefine a base class function.","incorrect_answer_2":"Encapsulation","incorrect_answer_3":"Providing a new implementation for a base class function in a derived class"},{"Question":"How do you include the contents of a header file in C++?","Answer":"#include","Difficulty":2,"incorrect_answer_1":"iostream","incorrect_answer_2":"final","incorrect_answer_3":"class"},{"Question":"What loop structure is used when the number of iterations is known beforehand? ","Answer":"for loop","Difficulty":2,"incorrect_answer_1":"enum","incorrect_answer_2":"iostream","incorrect_answer_3":"Base"},{"Question":"In C++, what is the purpose of the \"break\" statement?","Answer":"Exit loop or switch statement","Difficulty":2,"incorrect_answer_1":"To refer to the current instance of a class.","incorrect_answer_2":"A method used for destroying objects and freeing up resources.","incorrect_answer_3":"Ambiguity when a class inherits from two classes that have a common ancestor"},{"Question":"What is the result of the expression \"5 == 5\" in C++?","Answer":"true","Difficulty":2,"incorrect_answer_1":"private","incorrect_answer_2":"string","incorrect_answer_3":"final"},{"Question":"What is the access specifier that allows a class to hide its members from outside access?","Answer":"private","Difficulty":2,"incorrect_answer_1":"class","incorrect_answer_2":"final","incorrect_answer_3":"true"},{"Question":"Polymorphism in C++ can be achieved through ____.","Answer":"Function overloading","Difficulty":2,"incorrect_answer_1":"Members of a struct are public by default, while members of a class are private by default.","incorrect_answer_2":"It means the member is shared among all instances of the class.","incorrect_answer_3":"Using classes such as ifstream and getline()."},{"Question":"What is the purpose of a destructor in C++? ","Answer":"Clean up resources when an object is destroyed","Difficulty":2,"incorrect_answer_1":"Lambda expressions are anonymous functions that can capture variables from their surrounding scope.","incorrect_answer_2":"The process of simplifying complex systems\/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than","incorrect_answer_3":"Using the new keyword."},{"Question":"What is a lambda function in C++?","Answer":"Anonymous Function","Difficulty":3,"incorrect_answer_1":"The process of simplifying complex systems\/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than","incorrect_answer_2":"It allows for late binding of function calls.","incorrect_answer_3":"array_name[size] = {value1, value2, ...};"},{"Question":"How do you declare a reference variable in C++?","Answer":"Type &variableName","Difficulty":3,"incorrect_answer_1":"(int x, int y) -> int { return x + y; }","incorrect_answer_2":"Exit loop or switch statement","incorrect_answer_3":"To allow access to private and protected members of another class."},{"Question":"What is the purpose of the \"typename\" keyword in C++ templates?","Answer":"Specify that a dependent name is a type ","Difficulty":3,"incorrect_answer_1":"data_type variable_name;","incorrect_answer_2":"Members of a struct are public by default, while members of a class are private by default.","incorrect_answer_3":"Variable that stores the memory address of another variable"},{"Question":"Explain the concept of a pointer in C++.","Answer":"Variable that stores the memory address of another variable","Difficulty":3,"incorrect_answer_1":"The process of bundling data and methods within a class and hiding the internal state of an object","incorrect_answer_2":"Runtime polymorphism is achieved through virtual functions and dynamic binding, while compile-time polymorphism is achieved through templates and function overloading.","incorrect_answer_3":"It specifies that a member function is declared in the base class and overridden in derived classes."},{"Question":"What is the difference between \"++i\" and \"i++\" in C++?","Answer":"Pre-increment and post-increment operators","Difficulty":3,"incorrect_answer_1":"cout is used for output (printing), while cin is used for input (reading).","incorrect_answer_2":"It allows for late binding of function calls.","incorrect_answer_3":"It indicates that a function's body should be expanded inline by the compiler."},{"Question":"What is the purpose of the \"volatile\" keyword in C++?","Answer":"Indicate that a variable may be changed by external factors ","Difficulty":3,"incorrect_answer_1":"It allows a derived class to redefine a base class function.","incorrect_answer_2":"To allow access to private and protected members of another class.","incorrect_answer_3":"It allows for late binding of function calls."},{"Question":"What is the diamond problem in the context of multiple inheritance in C++?","Answer":"Ambiguity when a class inherits from two classes that have a common ancestor","Difficulty":3,"incorrect_answer_1":"array_name[size] = {value1, value2, ...};","incorrect_answer_2":"It allows a function to have multiple definitions with different parameters.","incorrect_answer_3":"Function overloading"},{"Question":"What is a pure virtual function in C++?","Answer":"A virtual function without a definition in the base class, making it abstract","Difficulty":3,"incorrect_answer_1":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_2":"To allow access to private and protected members of another class.","incorrect_answer_3":"int& refVar = x;"},{"Question":"Explain the concept of function overriding in C++.","Answer":"Providing a new implementation for a base class function in a derived class","Difficulty":3,"incorrect_answer_1":"The process of simplifying complex systems\/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than","incorrect_answer_2":"Members of a struct are public by default, while members of a class are private by default.","incorrect_answer_3":"cout is used for output (printing), while cin is used for input (reading)."},{"Question":"What is the syntax for declaring a variable in C++?","Answer":"data_type variable_name;","Difficulty":1,"incorrect_answer_1":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_2":"It represents a null pointer.","incorrect_answer_3":"A virtual function without a definition in the base class, making it abstract"},{"Question":"Explain the difference between pass by value and pass by reference in C++?","Answer":"Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter","Difficulty":1,"incorrect_answer_1":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_2":"Ambiguity when a class inherits from two classes that have a common ancestor","incorrect_answer_3":"An abstract class cannot be instantiated and may contain pure virtual functions."},{"Question":"How do you initialize an array in C++?","Answer":"array_name[size] = {value1, value2, ...};","Difficulty":1,"incorrect_answer_1":"To restrict access to members to only the derived classes.","incorrect_answer_2":"Ambiguity when a class inherits from two classes that have a common ancestor","incorrect_answer_3":"Exit loop or switch statement"},{"Question":"What is the purpose of the iostream library in C++?","Answer":"For input and output operations.","Difficulty":1,"incorrect_answer_1":"If Statement","incorrect_answer_2":"int& refVar = x;","incorrect_answer_3":"The ability of objects to take on multiple forms in a code. Objects of different classes to be treated as objects of a common superclass"},{"Question":"What is the difference between cout and cin in C++?","Answer":"cout is used for output (printing), while cin is used for input (reading).","Difficulty":1,"incorrect_answer_1":"To refer to the current instance of a class.","incorrect_answer_2":"Using the new keyword.","incorrect_answer_3":"A customer information class encapsulating details such as name, address, and contact information."},{"Question":"Explain the concept of pointers in C++ and provide an example.","Answer":"Pointers are variables that store memory addresses. Example: int *ptr;","Difficulty":2,"incorrect_answer_1":"Variable that stores the memory address of another variable","incorrect_answer_2":"Exit loop or switch statement","incorrect_answer_3":"Lambda expressions are anonymous functions that can capture variables from their surrounding scope."},{"Question":"What is the difference between struct and class in C++?","Answer":"Members of a struct are public by default, while members of a class are private by default.","Difficulty":2,"incorrect_answer_1":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_2":"Multiple inheritance allows a class to inherit from multiple base classes. Issues include ambiguity and the diamond problem.","incorrect_answer_3":"An abstract class cannot be instantiated and may contain pure virtual functions."},{"Question":"Describe the purpose of constructors and destructors in C++.","Answer":"Constructors are used to initialize objects, while destructors are used to clean up resources.","Difficulty":2,"incorrect_answer_1":"Variable that stores the memory address of another variable","incorrect_answer_2":"Function overloading involves redefining a base class function in a derived class, while function overriding involves having multiple functions with the same name but different parameters.","incorrect_answer_3":"Providing a new implementation for a base class function in a derived class"},{"Question":"How do you dynamically allocate memory in C++?","Answer":"Using the new keyword.","Difficulty":2,"incorrect_answer_1":"Exit loop or switch statement","incorrect_answer_2":"The ability to redefine the meaning of operators for user-defined types.","incorrect_answer_3":"A teen account class inheriting properties from a parent account."},{"Question":"Explain the concept of inheritance in C++ with an example.","Answer":"Inheritance allows a class to inherit properties and behaviors from another class. Example: class DerivedClass : public BaseClass {}","Difficulty":2,"incorrect_answer_1":"Exit loop or switch statement","incorrect_answer_2":"Members of a struct are public by default, while members of a class are private by default.","incorrect_answer_3":"Ambiguity when a class inherits from two classes that have a common ancestor"},{"Question":"What are lambda expressions in C++? Provide an example of their usage.","Answer":"Lambda expressions are anonymous functions that can capture variables from their surrounding scope.","Difficulty":3,"incorrect_answer_1":"A blueprint for creating objects that defines attributes and methods.","incorrect_answer_2":"Providing a new implementation for a base class function in a derived class","incorrect_answer_3":"An instance of a class that encapsulates data and methods."},{"Question":"Describe the difference between runtime polymorphism and compile-time polymorphism in C++.","Answer":"Runtime polymorphism is achieved through virtual functions and dynamic binding, while compile-time polymorphism is achieved through templates and function overloading.","Difficulty":3,"incorrect_answer_1":"The ability to redefine the meaning of operators for user-defined types.","incorrect_answer_2":"It represents a null pointer.","incorrect_answer_3":"To allow access to private and protected members of another class."},{"Question":"Explain the concept of function overloading and function overriding in C++.","Answer":"Function overloading involves redefining a base class function in a derived class, while function overriding involves having multiple functions with the same name but different parameters.","Difficulty":3,"incorrect_answer_1":"If Statement","incorrect_answer_2":"The ability to redefine the meaning of operators for user-defined types.","incorrect_answer_3":"Members of a struct are public by default, while members of a class are private by default."},{"Question":"What is a template in C++? How do you define and use templates?","Answer":"Templates allow generic programming by defining functions or classes that can work with any data type.","Difficulty":3,"incorrect_answer_1":"A blueprint for creating objects that defines attributes and methods.","incorrect_answer_2":"cout is used for output (printing), while cin is used for input (reading).","incorrect_answer_3":"Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter"},{"Question":"Describe the process of multiple inheritance in C++ and its potential issues.","Answer":"Multiple inheritance allows a class to inherit from multiple base classes. Issues include ambiguity and the diamond problem.","Difficulty":3,"incorrect_answer_1":"Pre-increment and post-increment operators","incorrect_answer_2":"array_name[size] = {value1, value2, ...};","incorrect_answer_3":"Object-Oriented Programming"},{"Question":"What is polymorphism in OOP?","Answer":"The ability of objects to take on multiple forms in a code. Objects of different classes to be treated as objects of a common superclass","Difficulty":1,"incorrect_answer_1":"Object-Oriented Programming","incorrect_answer_2":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_3":"STL containers automatically handle memory allocation and deallocation."},{"Question":"What is abstraction in OOP?","Answer":"The process of simplifying complex systems\/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than","Difficulty":1,"incorrect_answer_1":"Variable that stores the memory address of another variable","incorrect_answer_2":"STL containers automatically handle memory allocation and deallocation.","incorrect_answer_3":"Type &variableName"},{"Question":"What is encapsulation in OOP?","Answer":"The process of bundling data and methods within a class and hiding the internal state of an object","Difficulty":1,"incorrect_answer_1":"Templates allow generic programming by defining functions or classes that can work with any data type.","incorrect_answer_2":"The ability for a class to inherit attributes and behavior from another class.","incorrect_answer_3":"To redefine the meaning of operators for user-defined types."},{"Question":"What is inheritance in OOP?","Answer":"The ability for a class to inherit attributes and behavior from another class.","Difficulty":1,"incorrect_answer_1":"Anonymous Function","incorrect_answer_2":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_3":"Lambda expressions are anonymous functions that can capture variables from their surrounding scope."},{"Question":"What is a class in C++?","Answer":"A blueprint for creating objects that defines attributes and methods.","Difficulty":1,"incorrect_answer_1":"Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter","incorrect_answer_2":"Object-Oriented Programming","incorrect_answer_3":"To allow access to private and protected members of another class."},{"Question":"What is a constructor in C++?","Answer":"A special member function with the same name as the class used to initialize objects.","Difficulty":1,"incorrect_answer_1":"The ability to redefine the meaning of operators for user-defined types.","incorrect_answer_2":"An abstract class cannot be instantiated and may contain pure virtual functions.","incorrect_answer_3":"Inheritance allows a class to inherit properties and behaviors from another class. Example: class DerivedClass : public BaseClass {}"},{"Question":"What is a destructor in C++?","Answer":"A method used for destroying objects and freeing up resources.","Difficulty":1,"incorrect_answer_1":"It indicates that a variable's value may change unexpectedly.","incorrect_answer_2":"The ability to redefine the meaning of operators for user-defined types.","incorrect_answer_3":"To restrict access to members to only the derived classes."},{"Question":"What is an object in C++?","Answer":"An instance of a class that encapsulates data and methods.","Difficulty":1,"incorrect_answer_1":"It means the member is shared among all instances of the class.","incorrect_answer_2":"STL containers automatically handle memory allocation and deallocation.","incorrect_answer_3":"Pre-increment and post-increment operators"},{"Question":"What is operator overloading in C++?","Answer":"The ability to redefine the meaning of operators for user-defined types.","Difficulty":1,"incorrect_answer_1":"For input and output operations.","incorrect_answer_2":"Object-Oriented Programming","incorrect_answer_3":"Pre-increment and post-increment operators"},{"Question":"What is the correct creation of a class in C++?","Answer":"A blueprint for creating objects that defines attributes and methods.","Difficulty":2,"incorrect_answer_1":"Pre-increment and post-increment operators","incorrect_answer_2":"The ability to redefine the meaning of operators for user-defined types.","incorrect_answer_3":"It indicates that a variable's value may change unexpectedly."},{"Question":"How do you read data from a file in C++?","Answer":"Using classes such as ifstream and getline().","Difficulty":2,"incorrect_answer_1":"It indicates that a variable's value may change unexpectedly.","incorrect_answer_2":"returnType functionName","incorrect_answer_3":"It specifies that a member function is declared in the base class and overridden in derived classes."},{"Question":"What statement illustrates encapsulation in C++?","Answer":"To allow access to members only within the same class.","Difficulty":2,"incorrect_answer_1":"To refer to the current instance of a class.","incorrect_answer_2":"STL containers automatically handle memory allocation and deallocation.","incorrect_answer_3":"Type &variableName"},{"Question":"In a banking system, which real-world example demonstrates inheritance in C++?","Answer":"A teen account class inheriting properties from a parent account.","Difficulty":2,"incorrect_answer_1":"cout is used for output (printing), while cin is used for input (reading).","incorrect_answer_2":"It is used for destroying objects and freeing up resources.","incorrect_answer_3":"To restrict access to members to only the derived classes."},{"Question":"In a banking system, which real-world example demonstrates abstraction in C++?","Answer":"A customer information class encapsulating details such as name, address, and contact information.","Difficulty":2,"incorrect_answer_1":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_2":"Indicate that a variable may be changed by external factors ","incorrect_answer_3":"Exit loop or switch statement"},{"Question":"In a banking system, which real-world example demonstrates the use of a constructor in C++?","Answer":"A savings account class initializing the account balance to zero when created.","Difficulty":2,"incorrect_answer_1":"int& refVar = x;","incorrect_answer_2":"Type &variableName","incorrect_answer_3":"STL containers automatically handle memory allocation and deallocation."},{"Question":"In C++, what distinguishes a destructor from other member functions?","Answer":"It is used for destroying objects and freeing up resources.","Difficulty":2,"incorrect_answer_1":"Type &variableName","incorrect_answer_2":"Specify that a dependent name is a type ","incorrect_answer_3":"Object-Oriented Programming"},{"Question":"What is the primary purpose of an object in C++?","Answer":"An instance of a class that encapsulates data and methods.","Difficulty":2,"incorrect_answer_1":"A customer information class encapsulating details such as name, address, and contact information.","incorrect_answer_2":"Pass by value makes a copy of the actual parameter's value, while pass by reference allows the function to directly access and modify the actual parameter","incorrect_answer_3":"A teen account class inheriting properties from a parent account."},{"Question":"When should operator overloading be used in C++?","Answer":"To redefine the meaning of operators for user-defined types.","Difficulty":2,"incorrect_answer_1":"To refer to the current instance of a class.","incorrect_answer_2":"It indicates that a member variable can be modified even in a const member function.","incorrect_answer_3":"A savings account class initializing the account balance to zero when created."},{"Question":"What is the primary advantage of using dynamic polymorphism compared to static polymorphism in C++?","Answer":"It allows for late binding of function calls.","Difficulty":3,"incorrect_answer_1":"Inheritance allows a class to inherit properties and behaviors from another class. Example: class DerivedClass : public BaseClass {}","incorrect_answer_2":"returnType functionName","incorrect_answer_3":"Pre-increment and post-increment operators"},{"Question":"What is the main advantage of using STL containers over traditional arrays in C++?","Answer":"STL containers automatically handle memory allocation and deallocation.","Difficulty":3,"incorrect_answer_1":"Indicate that a variable may be changed by external factors ","incorrect_answer_2":"Specify that a dependent name is a type ","incorrect_answer_3":"A customer information class encapsulating details such as name, address, and contact information."},{"Question":"What is the purpose of the 'friend' keyword in C++ classes?","Answer":"To allow access to private and protected members of another class.","Difficulty":3,"incorrect_answer_1":"A customer information class encapsulating details such as name, address, and contact information.","incorrect_answer_2":"It allows a derived class to redefine a base class function.","incorrect_answer_3":"It means the member is shared among all instances of the class."},{"Question":"Which of the following accurately describes the diamond problem in C++?","Answer":"It occurs when a derived class has multiple base classes with a common ancestor.","Difficulty":3,"incorrect_answer_1":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_2":"A customer information class encapsulating details such as name, address, and contact information.","incorrect_answer_3":"For input and output operations."},{"Question":"In C++, what is the primary use of the 'protected' access specifier in a class?","Answer":"To restrict access to members to only the derived classes.","Difficulty":3,"incorrect_answer_1":"It allows a function to have multiple definitions with different parameters.","incorrect_answer_2":"It indicates that the function cannot modify the object's data members.","incorrect_answer_3":"data_type variable_name;"},{"Question":"What distinguishes an abstract class from a concrete class in C++?","Answer":"An abstract class cannot be instantiated and may contain pure virtual functions.","Difficulty":3,"incorrect_answer_1":"It occurs when a derived class has multiple base classes with a common ancestor.","incorrect_answer_2":"Pointers are variables that store memory addresses. Example: int *ptr;","incorrect_answer_3":"A teen account class inheriting properties from a parent account."},{"Question":"Which C++ feature allows a derived class to provide a specific implementation for a method in the base class?","Answer":"It allows a derived class to redefine a base class function.","Difficulty":3,"incorrect_answer_1":"It allows for late binding of function calls.","incorrect_answer_2":"Variable that stores the memory address of another variable","incorrect_answer_3":"Providing a new implementation for a base class function in a derived class"},{"Question":"What is the primary purpose of the 'this' pointer in C++?","Answer":"To refer to the current instance of a class.","Difficulty":3,"incorrect_answer_1":"Pre-increment and post-increment operators","incorrect_answer_2":"A savings account class initializing the account balance to zero when created.","incorrect_answer_3":"Templates allow generic programming by defining functions or classes that can work with any data type."},{"Question":"Which of the following accurately describes the concept of function overloading in C++?","Answer":"It allows a function to have multiple definitions with different parameters.","Difficulty":3,"incorrect_answer_1":"It specifies that a member function is declared in the base class and overridden in derived classes.","incorrect_answer_2":"A blueprint for creating objects that defines attributes and methods.","incorrect_answer_3":"Encapsulation"},{"Question":"Which of the following is not a fundamental data type in C++?","Answer":"string","Difficulty":0,"incorrect_answer_1":"for loop","incorrect_answer_2":"enum","incorrect_answer_3":"final"},{"Question":"What does OOP stand for in the context of C++?","Answer":"Object-Oriented Programming","Difficulty":0,"incorrect_answer_1":"A blueprint for creating objects that defines attributes and methods.","incorrect_answer_2":"data_type variable_name;","incorrect_answer_3":"Constructors are used to initialize objects, while destructors are used to clean up resources."},{"Question":"Which keyword is used for dynamic memory allocation in C++?","Answer":"new","Difficulty":0,"incorrect_answer_1":"+","incorrect_answer_2":"6","incorrect_answer_3":";"},{"Question":"Which of the following operators is used for pointer access in C++?","Answer":"->'","Difficulty":0,"incorrect_answer_1":"+","incorrect_answer_2":"10","incorrect_answer_3":"new"},{"Question":"What is the output of the following code? int x = 5; int y = x++; cout << y;","Answer":"6","Difficulty":0,"incorrect_answer_1":"10","incorrect_answer_2":"+","incorrect_answer_3":";"},{"Question":"Which keyword is used to define a class in C++?","Answer":"class","Difficulty":0,"incorrect_answer_1":"final","incorrect_answer_2":"iostream","incorrect_answer_3":"true"},{"Question":"What is the output of the following code? int x = 10; int *ptr = &x; cout << *ptr;","Answer":"10","Difficulty":0,"incorrect_answer_1":"int","incorrect_answer_2":";","incorrect_answer_3":"&&"},{"Question":"Which of the following is a correct way to declare a reference variable in C++?","Answer":"int& refVar = x;","Difficulty":0,"incorrect_answer_1":"Using classes such as ifstream and getline().","incorrect_answer_2":"A savings account class initializing the account balance to zero when created.","incorrect_answer_3":"It indicates that the function cannot modify the object's data members."},{"Question":"What does the keyword static signify when used with a class member?","Answer":"It means the member is shared among all instances of the class.","Difficulty":0,"incorrect_answer_1":"Anonymous Function","incorrect_answer_2":"Object-Oriented Programming","incorrect_answer_3":"Using the new keyword."},{"Question":" Which of the following is not a valid way to pass arguments to a function in C++?","Answer":"Pass by array","Difficulty":0,"incorrect_answer_1":"Ambiguity when a class inherits from two classes that have a common ancestor","incorrect_answer_2":"To allow access to members only within the same class.","incorrect_answer_3":"Object-Oriented Programming"},{"Question":"Which keyword is used to define an enumeration in C++?","Answer":"enum","Difficulty":0,"incorrect_answer_1":"Base","incorrect_answer_2":"private","incorrect_answer_3":"iostream"},{"Question":"What is the purpose of the const qualifier when used with a member function in C++?","Answer":"It indicates that the function cannot modify the object's data members.","Difficulty":0,"incorrect_answer_1":"It represents a null pointer.","incorrect_answer_2":"(int x, int y) -> int { return x + y; }","incorrect_answer_3":"A special member function with the same name as the class used to initialize objects."},{"Question":"What is the correct syntax for a lambda function in C++?","Answer":"(int x, int y) -> int { return x + y; }","Difficulty":0,"incorrect_answer_1":"The ability to redefine the meaning of operators for user-defined types.","incorrect_answer_2":"Multiple inheritance allows a class to inherit from multiple base classes. Issues include ambiguity and the diamond problem.","incorrect_answer_3":"Clean up resources when an object is destroyed"},{"Question":"What does the nullptr keyword represent in C++?","Answer":"It represents a null pointer.","Difficulty":0,"incorrect_answer_1":"Pointers are variables that store memory addresses. Example: int *ptr;","incorrect_answer_2":"To redefine the meaning of operators for user-defined types.","incorrect_answer_3":"If Statement"},{"Question":"What is the purpose of the virtual keyword in C++?","Answer":"It specifies that a member function is declared in the base class and overridden in derived classes.","Difficulty":0,"incorrect_answer_1":"Using the new keyword.","incorrect_answer_2":"Members of a struct are public by default, while members of a class are private by default.","incorrect_answer_3":"Clean up resources when an object is destroyed"},{"Question":"Which of the following is not a valid storage class specifier in C++?","Answer":"final","Difficulty":0,"incorrect_answer_1":"enum","incorrect_answer_2":"class","incorrect_answer_3":"Base"},{"Question":"What is the purpose of the volatile keyword in C++?","Answer":"It indicates that a variable's value may change unexpectedly.","Difficulty":0,"incorrect_answer_1":"Function overloading","incorrect_answer_2":"The process of simplifying complex systems\/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than","incorrect_answer_3":"Templates allow generic programming by defining functions or classes that can work with any data type."},{"Question":"What is the purpose of the mutable keyword in C++?","Answer":"It indicates that a member variable can be modified even in a const member function.","Difficulty":0,"incorrect_answer_1":"Anonymous Function","incorrect_answer_2":"The process of simplifying complex systems\/code by hiding unnecessary details while highlighting essential features, that allow developers to see what an object does not rather than","incorrect_answer_3":"Templates allow generic programming by defining functions or classes that can work with any data type."},{"Question":"Which standard library header file should be included to perform input and output operations in C++?","Answer":"iostream","Difficulty":0,"incorrect_answer_1":"class","incorrect_answer_2":"string","incorrect_answer_3":"#include"},{"Question":"What is the purpose of the inline keyword in C++?","Answer":"It indicates that a function's body should be expanded inline by the compiler.","Difficulty":0,"incorrect_answer_1":"Ambiguity when a class inherits from two classes that have a common ancestor","incorrect_answer_2":"The process of bundling data and methods within a class and hiding the internal state of an object","incorrect_answer_3":"It allows a function to have multiple definitions with different parameters."}]